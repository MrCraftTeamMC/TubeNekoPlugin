plugins {
    id 'java'
    id 'maven-publish'
}

group = rootProject.maven_group
version = rootProject.release_version
base.archivesName = rootProject.archives_base_name

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "Jitpack"
        url = "https://jitpack.io/"
    }
    maven {
        name = "Papi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.4-experimental-SNAPSHOT"

    // PlaceHolderApi
    compileOnly "me.clip:placeholderapi:2.11.4"

    // Vault
    compileOnly "com.github.MilkBowl:VaultAPI:1.7.1"

    // Luckperms
    compileOnly 'net.luckperms:api:5.4'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        TCBuildTeam(MavenPublication) {
            from components.java
        }
    }

    repositories {
        mavenLocal()

        maven {
            name = "LocalSnapshot"
            url = "file:///D:/Github/maven-repo/snapshot/"
        }
    }
}
